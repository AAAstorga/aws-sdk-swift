// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension SageMakerRuntime {

    public struct InvokeEndpointOutput: AWSShape {
        /// The key for the payload
        public static let payloadPath: String? = "Body"
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InvokedProductionVariant", location: .header(locationName: "x-Amzn-Invoked-Production-Variant"), required: false, type: .string), 
            AWSShapeMember(label: "ContentType", location: .header(locationName: "Content-Type"), required: false, type: .string), 
            AWSShapeMember(label: "CustomAttributes", location: .header(locationName: "X-Amzn-SageMaker-Custom-Attributes"), required: false, type: .string), 
            AWSShapeMember(label: "Body", required: true, type: .blob)
        ]
        /// Identifies the production variant that was invoked.
        public let invokedProductionVariant: String?
        /// The MIME type of the inference returned in the response body.
        public let contentType: String?
        public let customAttributes: String?
        /// Includes the inference provided by the model. For information about the format of the response body, see Common Data Formats—Inference.
        public let body: Data

        public init(invokedProductionVariant: String? = nil, contentType: String? = nil, customAttributes: String? = nil, body: Data) {
            self.invokedProductionVariant = invokedProductionVariant
            self.contentType = contentType
            self.customAttributes = customAttributes
            self.body = body
        }

        private enum CodingKeys: String, CodingKey {
            case invokedProductionVariant = "x-Amzn-Invoked-Production-Variant"
            case contentType = "Content-Type"
            case customAttributes = "X-Amzn-SageMaker-Custom-Attributes"
            case body = "Body"
        }
    }

    public struct InvokeEndpointInput: AWSShape {
        /// The key for the payload
        public static let payloadPath: String? = "Body"
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "CustomAttributes", location: .header(locationName: "X-Amzn-SageMaker-Custom-Attributes"), required: false, type: .string), 
            AWSShapeMember(label: "EndpointName", location: .uri(locationName: "EndpointName"), required: true, type: .string), 
            AWSShapeMember(label: "Accept", location: .header(locationName: "Accept"), required: false, type: .string), 
            AWSShapeMember(label: "ContentType", location: .header(locationName: "Content-Type"), required: false, type: .string), 
            AWSShapeMember(label: "Body", required: true, type: .blob)
        ]
        public let customAttributes: String?
        /// The name of the endpoint that you specified when you created the endpoint using the CreateEndpoint API. 
        public let endpointName: String
        /// The desired MIME type of the inference in the response.
        public let accept: String?
        /// The MIME type of the input data in the request body.
        public let contentType: String?
        /// Provides input data, in the format specified in the ContentType request header. Amazon SageMaker passes all of the data in the body to the model.  For information about the format of the request body, see Common Data Formats—Inference.
        public let body: Data

        public init(customAttributes: String? = nil, endpointName: String, accept: String? = nil, contentType: String? = nil, body: Data) {
            self.customAttributes = customAttributes
            self.endpointName = endpointName
            self.accept = accept
            self.contentType = contentType
            self.body = body
        }

        private enum CodingKeys: String, CodingKey {
            case customAttributes = "X-Amzn-SageMaker-Custom-Attributes"
            case endpointName = "EndpointName"
            case accept = "Accept"
            case contentType = "Content-Type"
            case body = "Body"
        }
    }

}